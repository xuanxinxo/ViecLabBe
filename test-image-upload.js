const https = require('https');

const BASE_URL = 'https://vieclabbe.onrender.com';

// Test data v·ªõi h√¨nh ·∫£nh
const testJobData = {
  title: "Test Job v·ªõi h√¨nh ·∫£nh",
  company: "Test Company",
  location: "H·ªì Ch√≠ Minh",
  type: "Full-time",
  salary: "15-20M VND",
  description: "M√¥ t·∫£ c√¥ng vi·ªác test v·ªõi h√¨nh ·∫£nh",
  requirements: ["Node.js", "React"],
  benefits: ["Health insurance"],
  deadline: "2024-12-31",
  tags: ["javascript", "test"],
  isRemote: true,
  img: "https://via.placeholder.com/300x200/0066CC/FFFFFF?text=Test+Job+Image"
};

const testNewsData = {
  title: "Test News v·ªõi h√¨nh ·∫£nh",
  summary: "T√≥m t·∫Øt tin t·ª©c test v·ªõi h√¨nh ·∫£nh",
  image: "https://via.placeholder.com/400x300/FF6600/FFFFFF?text=Test+News+Image",
  link: "https://example.com/test-news",
  date: new Date().toISOString()
};

const testHiringData = {
  title: "Test Hiring v·ªõi h√¨nh ·∫£nh",
  company: "Test Company",
  location: "H√† N·ªôi",
  type: "Part-time",
  salary: "10-15M VND",
  description: "M√¥ t·∫£ tuy·ªÉn d·ª•ng test v·ªõi h√¨nh ·∫£nh",
  requirements: ["Vue.js", "TypeScript"],
  benefits: ["Flexible hours"],
  deadline: "2024-12-31",
  img: "https://via.placeholder.com/350x250/00AA00/FFFFFF?text=Test+Hiring+Image"
};

const testNewJobData = {
  title: "Test NewJob v·ªõi h√¨nh ·∫£nh",
  company: "Test Company",
  location: "ƒê√† N·∫µng",
  type: "Contract",
  salary: "20-25M VND",
  description: "M√¥ t·∫£ new job test v·ªõi h√¨nh ·∫£nh",
  requirements: ["Angular", "Node.js"],
  benefits: ["Remote work"],
  deadline: "2024-12-31",
  tags: ["angular", "test"],
  isRemote: true,
  img: "https://via.placeholder.com/300x200/AA0066/FFFFFF?text=Test+NewJob+Image",
  status: "active"
};

let adminToken = '';

// Helper function ƒë·ªÉ make HTTP requests
function makeRequest(url, options = {}) {
  return new Promise((resolve, reject) => {
    const req = https.request(url, options, (res) => {
      let data = '';
      res.on('data', (chunk) => data += chunk);
      res.on('end', () => {
        try {
          const jsonData = JSON.parse(data);
          resolve({ status: res.statusCode, data: jsonData });
        } catch (e) {
          resolve({ status: res.statusCode, data: data });
        }
      });
    });

    req.on('error', reject);
    
    if (options.body) {
      req.write(options.body);
    }
    
    req.end();
  });
}

// Admin login
async function adminLogin() {
  console.log('üîê ƒêƒÉng nh·∫≠p admin...');
  
  const loginData = {
    username: 'admin',
    password: 'admin123'
  };

  const response = await makeRequest(`${BASE_URL}/api/admin/login`, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify(loginData)
  });

  if (response.status === 200 && response.data.success) {
    adminToken = response.data.data.accessToken;
    console.log('‚úÖ ƒêƒÉng nh·∫≠p admin th√†nh c√¥ng');
    return true;
  } else {
    console.log('‚ùå ƒêƒÉng nh·∫≠p admin th·∫•t b·∫°i:', response.data);
    return false;
  }
}

// Test Job v·ªõi h√¨nh ·∫£nh
async function testJobImageUpload() {
  console.log('\nüìã === TEST JOB IMAGE UPLOAD ===');
  
  // 1. T·∫°o job v·ªõi h√¨nh ·∫£nh
  console.log('1. T·∫°o job v·ªõi h√¨nh ·∫£nh...');
  const createResponse = await makeRequest(`${BASE_URL}/api/admin/jobs`, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Authorization': `Bearer ${adminToken}`
    },
    body: JSON.stringify(testJobData)
  });

  if (createResponse.status === 201 && createResponse.data.success) {
    const jobId = createResponse.data.data.id;
    console.log('‚úÖ T·∫°o job th√†nh c√¥ng, ID:', jobId);
    console.log('üñºÔ∏è H√¨nh ·∫£nh job:', createResponse.data.data.img);

    // 2. Update job v·ªõi h√¨nh ·∫£nh m·ªõi
    console.log('\n2. Update job v·ªõi h√¨nh ·∫£nh m·ªõi...');
    const updateData = {
      ...testJobData,
      title: "Updated Job v·ªõi h√¨nh ·∫£nh m·ªõi",
      img: "https://via.placeholder.com/300x200/FF0000/FFFFFF?text=Updated+Job+Image"
    };

    const updateResponse = await makeRequest(`${BASE_URL}/api/admin/jobs/${jobId}`, {
      method: 'PUT',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${adminToken}`
      },
      body: JSON.stringify(updateData)
    });

    if (updateResponse.status === 200 && updateResponse.data.success) {
      console.log('‚úÖ Update job th√†nh c√¥ng');
      console.log('üñºÔ∏è H√¨nh ·∫£nh job sau update:', updateResponse.data.data.img);
    } else {
      console.log('‚ùå Update job th·∫•t b·∫°i:', updateResponse.data);
    }

    return jobId;
  } else {
    console.log('‚ùå T·∫°o job th·∫•t b·∫°i:', createResponse.data);
    return null;
  }
}

// Test News v·ªõi h√¨nh ·∫£nh
async function testNewsImageUpload() {
  console.log('\nüì∞ === TEST NEWS IMAGE UPLOAD ===');
  
  // 1. T·∫°o news v·ªõi h√¨nh ·∫£nh
  console.log('1. T·∫°o news v·ªõi h√¨nh ·∫£nh...');
  const createResponse = await makeRequest(`${BASE_URL}/api/admin/news`, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Authorization': `Bearer ${adminToken}`
    },
    body: JSON.stringify(testNewsData)
  });

  if (createResponse.status === 201) {
    const newsId = createResponse.data.id;
    console.log('‚úÖ T·∫°o news th√†nh c√¥ng, ID:', newsId);
    console.log('üñºÔ∏è H√¨nh ·∫£nh news:', createResponse.data.image);

    // 2. Update news v·ªõi h√¨nh ·∫£nh m·ªõi
    console.log('\n2. Update news v·ªõi h√¨nh ·∫£nh m·ªõi...');
    const updateData = {
      ...testNewsData,
      title: "Updated News v·ªõi h√¨nh ·∫£nh m·ªõi",
      image: "https://via.placeholder.com/400x300/00FF00/FFFFFF?text=Updated+News+Image"
    };

    const updateResponse = await makeRequest(`${BASE_URL}/api/admin/news/${newsId}`, {
      method: 'PUT',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${adminToken}`
      },
      body: JSON.stringify(updateData)
    });

    if (updateResponse.status === 200) {
      console.log('‚úÖ Update news th√†nh c√¥ng');
      console.log('üñºÔ∏è H√¨nh ·∫£nh news sau update:', updateResponse.data.image);
    } else {
      console.log('‚ùå Update news th·∫•t b·∫°i:', updateResponse.data);
    }

    return newsId;
  } else {
    console.log('‚ùå T·∫°o news th·∫•t b·∫°i:', createResponse.data);
    return null;
  }
}

// Test Hiring v·ªõi h√¨nh ·∫£nh
async function testHiringImageUpload() {
  console.log('\nüíº === TEST HIRING IMAGE UPLOAD ===');
  
  // 1. T·∫°o hiring v·ªõi h√¨nh ·∫£nh
  console.log('1. T·∫°o hiring v·ªõi h√¨nh ·∫£nh...');
  const createResponse = await makeRequest(`${BASE_URL}/api/admin/hirings`, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Authorization': `Bearer ${adminToken}`
    },
    body: JSON.stringify(testHiringData)
  });

  if (createResponse.status === 201 && createResponse.data.success) {
    const hiringId = createResponse.data.data.id;
    console.log('‚úÖ T·∫°o hiring th√†nh c√¥ng, ID:', hiringId);
    console.log('üñºÔ∏è H√¨nh ·∫£nh hiring:', createResponse.data.data.img);

    // 2. Update hiring v·ªõi h√¨nh ·∫£nh m·ªõi
    console.log('\n2. Update hiring v·ªõi h√¨nh ·∫£nh m·ªõi...');
    const updateData = {
      ...testHiringData,
      title: "Updated Hiring v·ªõi h√¨nh ·∫£nh m·ªõi",
      img: "https://via.placeholder.com/350x250/0000FF/FFFFFF?text=Updated+Hiring+Image"
    };

    const updateResponse = await makeRequest(`${BASE_URL}/api/admin/hirings/${hiringId}`, {
      method: 'PUT',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${adminToken}`
      },
      body: JSON.stringify(updateData)
    });

    if (updateResponse.status === 200 && updateResponse.data.success) {
      console.log('‚úÖ Update hiring th√†nh c√¥ng');
      console.log('üñºÔ∏è H√¨nh ·∫£nh hiring sau update:', updateResponse.data.data.img);
    } else {
      console.log('‚ùå Update hiring th·∫•t b·∫°i:', updateResponse.data);
    }

    return hiringId;
  } else {
    console.log('‚ùå T·∫°o hiring th·∫•t b·∫°i:', createResponse.data);
    return null;
  }
}

// Test NewJob v·ªõi h√¨nh ·∫£nh
async function testNewJobImageUpload() {
  console.log('\nüÜï === TEST NEWJOB IMAGE UPLOAD ===');
  
  // 1. T·∫°o newjob v·ªõi h√¨nh ·∫£nh
  console.log('1. T·∫°o newjob v·ªõi h√¨nh ·∫£nh...');
  const createResponse = await makeRequest(`${BASE_URL}/api/admin/newjobs`, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Authorization': `Bearer ${adminToken}`
    },
    body: JSON.stringify(testNewJobData)
  });

  if (createResponse.status === 201 && createResponse.data.success) {
    const newJobId = createResponse.data.data.id;
    console.log('‚úÖ T·∫°o newjob th√†nh c√¥ng, ID:', newJobId);
    console.log('üñºÔ∏è H√¨nh ·∫£nh newjob:', createResponse.data.data.img);

    // 2. Update newjob v·ªõi h√¨nh ·∫£nh m·ªõi
    console.log('\n2. Update newjob v·ªõi h√¨nh ·∫£nh m·ªõi...');
    const updateData = {
      ...testNewJobData,
      title: "Updated NewJob v·ªõi h√¨nh ·∫£nh m·ªõi",
      img: "https://via.placeholder.com/300x200/FF00FF/FFFFFF?text=Updated+NewJob+Image"
    };

    const updateResponse = await makeRequest(`${BASE_URL}/api/admin/newjobs/${newJobId}`, {
      method: 'PUT',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${adminToken}`
      },
      body: JSON.stringify(updateData)
    });

    if (updateResponse.status === 200 && updateResponse.data.success) {
      console.log('‚úÖ Update newjob th√†nh c√¥ng');
      console.log('üñºÔ∏è H√¨nh ·∫£nh newjob sau update:', updateResponse.data.data.img);
    } else {
      console.log('‚ùå Update newjob th·∫•t b·∫°i:', updateResponse.data);
    }

    return newJobId;
  } else {
    console.log('‚ùå T·∫°o newjob th·∫•t b·∫°i:', createResponse.data);
    return null;
  }
}

// Main test function
async function runImageUploadTests() {
  console.log('üöÄ B·∫ÆT ƒê·∫¶U TEST CH·ª®C NƒÇNG UPLOAD V√Ä UPDATE H√åNH ·∫¢NH');
  console.log('=' .repeat(60));

  // ƒêƒÉng nh·∫≠p admin
  const loginSuccess = await adminLogin();
  if (!loginSuccess) {
    console.log('‚ùå Kh√¥ng th·ªÉ ƒëƒÉng nh·∫≠p admin. D·ª´ng test.');
    return;
  }

  // Test c√°c API
  await testJobImageUpload();
  await testNewsImageUpload();
  await testHiringImageUpload();
  await testNewJobImageUpload();

  console.log('\n' + '=' .repeat(60));
  console.log('‚úÖ HO√ÄN TH√ÄNH TEST CH·ª®C NƒÇNG UPLOAD V√Ä UPDATE H√åNH ·∫¢NH');
}

// Ch·∫°y test
runImageUploadTests().catch(console.error);
